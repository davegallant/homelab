services:
  invidious:
    # https://quay.io/repository/invidious/invidious?tab=tags
    image: quay.io/invidious/invidious:2024.11.10-2150264
    container_name: invidious
    restart: unless-stopped
    ports:
      - "0.0.0.0:3000:3000"
    environment:
      # Please read the following file for a comprehensive list of all available
      # configuration options and their associated syntax:
      # https://github.com/iv-org/invidious/blob/master/config/config.example.yml
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: {{ invidious_db_user }}
          password: {{ invidious_db_password }}
          host: invidious-db
          port: 5432
        check_tables: true
        hmac_key: {{ invidious_hmac_key }}
        signature_server: inv_sig_helper:12999
        visitor_data: {{ invidious_visitor_data }}
        po_token: {{ invidious_po_token }}
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    depends_on:
      - invidious-db

  inv_sig_helper:
    # https://quay.io/repository/invidious/inv-sig-helper?tab=tags
    image: quay.io/invidious/inv-sig-helper:master-5025e49
    container_name: invidious-inv-sig-helper
    init: true
    command: ["--tcp", "0.0.0.0:12999"]
    environment:
      - RUST_LOG=info
    restart: unless-stopped
    cap_drop:
      - ALL
    read_only: true
    security_opt:
      - no-new-privileges:true

  invidious-db:
    image: docker.io/library/postgres:14
    container_name: invidious-db
    restart: unless-stopped
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ./config/sql:/config/sql
      - ./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: {{ invidious_db_user }}
      POSTGRES_PASSWORD: {{ invidious_db_password }}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]

  traefik:
    image: traefik:v3.2.2
    container_name: traefik-invidious
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./traefik/data/traefik.yaml:/traefik.yaml:ro
      - ./traefik/data/dynamic.yaml:/dynamic.yaml:ro
      - /var/run/tailscale/tailscaled.sock:/var/run/tailscale/tailscaled.sock

volumes:
  postgresdata:

