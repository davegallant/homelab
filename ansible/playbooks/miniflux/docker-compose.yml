
services:
  miniflux:
    image: miniflux/miniflux:2.2.6
    container_name: miniflux
    network_mode: service:ts-miniflux
    depends_on:
      - miniflux-db
    restart: always
    environment:
      - DATABASE_URL=postgres://{{ miniflux_db_user }}:{{ miniflux_db_password }}@miniflux-db/miniflux?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME={{ miniflux_admin_username }}
      - ADMIN_PASSWORD={{ miniflux_admin_password }}
      - BASE_URL=https://miniflux.snake-cloud.ts.net
  miniflux-db:
    image: postgres:15.11
    container_name: miniflux-db
    environment:
      - POSTGRES_USER={{ miniflux_db_user }}
      - POSTGRES_PASSWORD={{ miniflux_db_password }}
    volumes:
      - miniflux-db:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s
  ts-miniflux:
    image: tailscale/tailscale:v1.80
    container_name: ts-miniflux
    hostname: miniflux
    environment:
      - TS_AUTHKEY={{ miniflux_ts_authkey }}
      - TS_SERVE_CONFIG=/config/miniflux.json
      - TS_STATE_DIR=/var/lib/tailscale
    volumes:
      - ${PWD}/state:/var/lib/tailscale
      - ${PWD}/config:/config
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped
volumes:
  miniflux-db:
    name: miniflux-db
